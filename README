# Tempo de experiência em cada ferramenta:

- Typescript: 2 anos;
- NestJs: 2 anos;
- TypeOrm: 2 anos;
- Swagger: 3 anos;
- Docker: 2 anos;
- Redis: 2 anos;
- Postgres: 3 anos;

# Testes unitário/e2e

- Por conta do curto prazo, não consegui realizar todos os testes unitário e nenhum teste e2e

# Redis:
-Eu configurei o Redis no projeto e tbm no Heroku, porém pela falta do tempo acabei não implementando de fato durante a aplicação

#Rota de Listagem de Filmes:
- A rota de listagem de filmes usa o método post por conta dos filtros!

# Node Version: v20.12.2

- Note: To configure the .env, use the example.env file in the project root as an example

# Install all dependencies

- command: npm install | npm i

# Build application:

- command: npm run build

# Run Typescript application:

- command: npm run start:dev

# Run Javascript application:

- command: npm start

# Run Docker

- command: npm run docker:run

# Run Test

- command: npm run test

# Run Coverage Test

- command: npm run test:cov

# On Swagger

- create an user with your name, email and password
  Note: The password is encrypted

- Do login with your email and password

- To verify exists Genre on create a movie, access route to get genres list

Note: now you have access to protected routes
