version: '3.7'

services:
  nest-backend:
    image: nest-api
    container_name: nest-app
    build:
      dockerfile: Dockerfile
      context: .
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 3000:5000
    environment:
      - NODE_ENV=development
      - API_PORT=5000
      - API_HOST=localhost
      - API_LOGIN_EMAIL_FIELD=email,
      - API_LOGIN_PASSWORD_FIELD=password,
      - API_ACCESS_TOKEN_SECRET=mksBackendChallenge
      - API_ACCESS_TOKEN_HEADER=x-api-token
      - API_ACCESS_TOKEN_TTL_IN_HOURS=2
      - API_LOG_ENABLE=true
      - API_LOG_LEVEL=debug
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=postgres
      - DB_LOG_ENABLE=false
      - DB_SYNC=false
      - REDIS_PORT=6379
      - REDIS_HOST=redis
    networks:
      - backend_network
    restart: unless-stopped
    depends_on:
      - postgres
      - redis

  redis:
    container_name: redis-db
    image: redis
    environment:
      - REDIS_PORT=6379
    ports:
      - 6379:6379
    networks:
      - backend_network
    restart: unless-stopped
    volumes:
      - redis:/data

  postgres:
    container_name: postgres-db
    image: postgres:12
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    networks:
      - backend_network
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pgadmin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    networks:
      - backend_network
    ports:
      - '5050:80'
    depends_on:
      - postgres

networks:
  backend_network:
    driver: bridge

volumes:
  postgres_data: {}
  redis:
    driver: local
